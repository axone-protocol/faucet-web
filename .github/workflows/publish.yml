name: Publish

on:
  push:
    branches: [main]
    tags: ["v*"]

  pull_request:
    branches: [main]

jobs:
  publish-docker-images:
    runs-on: ubuntu-20.04
    if: github.event_name != 'pull_request'
    concurrency:
      group: publish-docker-images-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up context
        id: project_context
        uses: FranzDiebold/github-env-vars-action@v2.3.1

      - name: Extract metadata (tags, labels) for Docker
        id: docker_metadata
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }},${{ github.repository }}
          tags: |
            type=raw,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }},value=nightly
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            org.opencontainers.image.vendor=OKP4

      - name: Login to OKP4 Docker registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_REGISTRY_ID }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: okp4
          password: ${{ secrets.DOCKER_HUB_REGISTRY_TOKEN }}

      - name: Build and publish image(s)
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}

  publish-npm-package-okp4:
    runs-on: ubuntu-20.04
    concurrency:
      group: publish-npm-package-okp4-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up context
        id: project_context
        uses: FranzDiebold/github-env-vars-action@v2.3.1

      - name: Setup node environment (for publishing)
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.0
          registry-url: "https://npm.pkg.github.com"
          scope: "@okp4"

      - name: Publish package
        run: |
          DATE=$(date +%Y%m%d%H%M%S)

          yarn && yarn build

          publish=(yarn publish --no-git-tag-version --non-interactive)

          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            publish+=(--tag latest)
          elif [[ $GITHUB_EVENT_NAME == pull_request ]]; then
            publish+=(--prerelease --preid ${{ env.CI_ACTION_REF_NAME_SLUG }}.$DATE --tag ${{ env.CI_ACTION_REF_NAME_SLUG }})
          else
            publish+=(--prerelease --preid next.$DATE --tag next)
          fi

          echo "ðŸš€ Publishing npm package with following command line: ${publish[@]}"
          "${publish[@]}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
